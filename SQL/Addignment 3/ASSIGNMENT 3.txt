USE assignment3;                                                                       ASSIGNMENT 3


1. Write a SQL statement to insert a record as follows: 
Employees :
 key)' at line 10
mysql> CREATE TABLE employee
    -> (
    -> emp_id INT PRIMARY KEY,
    -> first_name VARCHAR(10) not null,
    -> last_name VARCHAR (10) not null,
    -> phone_num INT not null unique,
    -> hire_date DATE,
    -> job_id INT,
    -> commision_pct INT,
    -> department_id INT );


mysql> INSERT INTO employee (emp_id,first_name,last_name,phone_num,hire_date,job_id,commision_pct,department_id) VALUES (104,"Bruce","Pataballa","VPATAA569","1987-06-22","SA_MAN",0.00,30),
    -> (105,"David","Austin","BERNST145","1987-06-28","SA_MAN",0.00,60),
    -> (106,"Valli","Lorentz","VPATABAL5","1987-06-28","SA_MAN",0.00,114),
    -> (107,"Nancy","Fanvlet","NGREENBE","1987-06-26","SA_MAN",0.00,108),
    -> (108,"Daniel","Faviet","DFAVIET","1987-06-26","SA_MAN",0.00,80);


 CREATE TABLE department
    -> (
    -> dept_id INT PRIMARY KEY,
    -> dept_name VARCHAR(20),
    -> manager_id INT,
    -> location_id INT);

 INSERT INTO department
    -> (dept_id,dept_name,manager_id,location_id)
    -> VALUES
    -> (10,"administration",200,1700),
    -> (20,"marketing",201,1800),
    -> (30,"purchasing",114,1700),
    -> (40,"hr",203,2400),
    -> (50,"shipping",121,1500),
    -> (60,"it",103,1400),
    -> (70,"public relation",204,2700),
    -> (80,"sales",145,2500);

2. Write a SQL statement to insert 3 rows by a single insert statement. 
want to add multiple rows/data in a column

3 Write a SQL statement to insert one row in jobs table to ensure that no duplicate 
value will be entered in the job_id column.
CREATE TABLE job
(
job_id VARCHAR(20) PRIMARY KEY,        // using primary key so no duplicate will allowed in job_id
job_title VARCHAR(50),
min_sal INT,
max_sal INT);


4. Write SQL statement to increment salary of each emp by 10%. 
 UPDATE job
    -> SET min_sal = min_sal *1.10,
    -> max_sal = max_sal*1.10;


5. Write a SQL statement to change the email column of employees table with 'not 
available' for those employees whose department_id is 80 and gets a 
commission is less than .20% 
UPDATE employees
SET email = 'not available'
WHERE department_id = 80
  AND commission_pct < 0.20;



 UPDATE employee                           //adding data to email without using auto increment 
    -> SET email = CASE emp_id
    -> WHEN 100 THEN 'sking'
    -> WHEN 101 THEN 'nkochhar'
    -> WHEN 102 THEN 'ldehaan'
    -> WHEN 103 THEN 'ahunold'
    -> WHEN 104 THEN 'dustin'
    -> WHEN 105 THEN 'vapatabal'
    -> WHEN 106 THEN 'dlorentz'
    -> WHEN 107 THEN 'ngreenre'
    -> WHEN 108 THEN 'dfaviet'
    -> END




6. Write a SQL statement to change the email column of employees table with 'not 
available' for those employees who belongs to the 'Purchasing' department. 

UPDATE employees e
JOIN departments d 
   ON e.department_id = d.department_id
SET e.email = 'not available'
WHERE d.department_name = 'Purchasing';



7. Write a SQL statement to change the email and commission_pct column of 
employees table with 'not available' and 0.10 for all employees.
 UPDATE employee
    -> SET email = 'not avilable',
    -> commision_pct = 010;